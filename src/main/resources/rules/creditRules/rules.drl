package rules.creditRules

dialect "java"

import model.credit.Customer
import model.credit.CustomerData
import model.credit.CreditLine
import model.credit.Application
import model.credit.PendingApplication
import model.credit.ApprovedApplication
import model.credit.UnapprovedApplication

global org.slf4j.Logger logger

rule "My first rule"
    when
        Customer($name:name, age > 18)
    then
        logger.info("My first rule works!");
end

rule "Customers with a credit score between 300 and 500 get a standard line of credit"
    when
        not( exists ( ApprovedApplication() ) )
        not( exists ( UnapprovedApplication() ) )

        $customer : CustomerData( creditScore <= 500, creditScore >= 300 )
        $pendingApplication : Application( customerId == $customer.id )
    then
        CreditLine creditLine = new CreditLine( $customer, 10000 );

        insert( $pendingApplication.approved( creditLine ) );
        delete( $pendingApplication );
end

rule "Customers with a credit score above 500 get an extended line of credit"
    when
        not( exists ( ApprovedApplication() ) )
        not( exists ( UnapprovedApplication() ) )

        $customer : CustomerData( creditScore > 500 )
        $pendingApplication : Application( customerId == $customer.id )
    then
        CreditLine creditLine = new CreditLine( $customer, 15000 );

        insert( $pendingApplication.approved( creditLine ) );
        delete( $pendingApplication );
end

rule "Customers with a credit score less than 300 get denied a line of credit"
    when
        not( exists ( ApprovedApplication() ) )
        not( exists ( UnapprovedApplication() ) )

        $customer : CustomerData( creditScore < 300 )
        $pendingApplication : Application( customerId == $customer.id )

    then
        insert( $pendingApplication.unapproved() );
        delete( $pendingApplication );
end